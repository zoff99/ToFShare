name: Linux Bob Tests
on:
  push:
    paths-ignore:
     - 'README.md'
  pull_request:
    paths-ignore:
     - 'README.md'
  workflow_dispatch:
    inputs:
      version:
        description: dummy
        default: dummy

jobs:
  android-linux-test_bob:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29]
    permissions:
      contents: write
    if: ${{ true }}
    steps:
      - uses: actions/checkout@v5

      - name: install deps
        run: |
          sudo apt-get update && \
          sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install -y --no-install-recommends \
          fonts-freefont-otf \
          adb \
          ghostscript \
          imagemagick \
          ca-certificates
      - name: check imagemagick
        run: |
          convert -list font || echo "NO ERR"
      - name: Install Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: |
            17
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: test java1
        run:  |
              pwd
              type java
              echo "===========1========="
              java -version || exit 0
              echo "===========2========="
      - name: download tester
        shell: bash
        run: |
             curl -L https://github.com/zoff99/java_tox_tester/archive/refs/heads/master.zip -o master.zip
             unzip master.zip
             ls -al java_tox_tester-master/
             sed -i -e 's#/storage/emulated/0/Android/data/com.zoffcc.applications.trifa#/storage/emulated/0/Android/data/com.zoffcc.applications.tofshare#g' do_wait_for_app.sh
             echo "------------------------"
             cat do_wait_for_app.sh
             echo "------------------------"
             java -version
             javac -version
      - name: start tester
        shell: bash
        run: |
             cd java_tox_tester-master/ ; ls -al ; ./do_wait_for_app.sh > /home/runner/work/ToFShare/ToFShare/android-refimpl-app/tester.log 2>&1 &
      - name: check disk space
        shell: bash
        run: |
             df -h
             du -hs /home/runner/work
             cd /home/runner/work
             du -s *|sort -n
      - name: android test
        timeout-minutes: 40
        continue-on-error: true
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          profile: Nexus 6
          arch: x86_64
          ndk: 21.0.6113669
          cmake: 3.10.2.4988404
          force-avd-creation: false
          emulator-options: -no-snapshot-save -skin 1080x2220 -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back virtualscene -camera-front emulated
          disable-animations: true
          disable-spellchecker: true
          pre-emulator-launch-script: |
            echo "Running pre emulator launch script. Printing the working directory now:"
            pwd
          script: |
            df -h
            rm -f /home/runner/work/ToFShare/ToFShare/android-refimpl-app/app/witness.gradle
            printf 'dependencyVerification {\nverify = [\n]\n}\n' > /home/runner/work/ToFShare/ToFShare/android-refimpl-app/app/witness.gradle
            java -version
            cd android-refimpl-app ; ./gradlew assemble
            adb logcat -c || echo "NOERR"
            adb logcat > /home/runner/work/ToFShare/ToFShare/android-refimpl-app/logcat.txt &
            echo 'sleep 100' > /home/runner/a.sh
            echo 'adb shell settings put secure immersive_mode_confirmations confirmed' >> /home/runner/a.sh
            echo 'sleep 40' >> /home/runner/a.sh
            echo 'adb shell settings put secure immersive_mode_confirmations confirmed' >> /home/runner/a.sh
            echo 'sleep 10' >> /home/runner/a.sh
            echo 'adb shell settings put secure immersive_mode_confirmations confirmed' >> /home/runner/a.sh
            echo 'sleep 10' >> /home/runner/a.sh
            echo 'adb shell settings put secure immersive_mode_confirmations confirmed' >> /home/runner/a.sh
            echo 'sleep 30' >> /home/runner/a.sh
            echo 'adb shell settings put secure immersive_mode_confirmations confirmed' >> /home/runner/a.sh
            cat /home/runner/a.sh
            ls -al /home/runner/a.sh
            chmod u+rx /home/runner/a.sh
            bash /home/runner/a.sh &
            echo "+++++++++++++++++++++++++++"
            adb devices
            echo "+++++++++++++++++++++++++++"
            adb shell settings get secure immersive_mode_confirmations
            echo "+++++++++++++++++++++++++++"
            adb shell settings put secure immersive_mode_confirmations confirmed
            echo "+++++++++++++++++++++++++++"
            adb shell settings get secure immersive_mode_confirmations
            echo "+++++++++++++++++++++++++++"
            cd android-refimpl-app ; ./gradlew app:connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.zoffcc.applications.trifa.JavaFriendTester || echo "NOERR"
            cat /home/runner/work/ToFShare/ToFShare/android-refimpl-app/logcat.txt
            echo "================"
            echo "================"
            cat /home/runner/work/ToFShare/ToFShare/android-refimpl-app/tester.log
            echo "================"
            echo "================"
            pwd
            adb pull /sdcard/googletest/test_outputfiles .
            ls -al /home/runner/work/ToFShare/ToFShare/test_outputfiles/
            echo "---------------"
            ls -al /home/runner/work/ToFShare/ToFShare/test_outputfiles/*.png

      - name: put datetime on screenshots
        run:  |
              cd /home/runner/work/ToFShare/ToFShare/
              git rev-parse --short HEAD
              c="$(git rev-parse --short HEAD)"
              cd /home/runner/work/ToFShare/ToFShare/test_outputfiles/
              ls -al
              d="$(date '+%Y-%m-%d %H:%M:%S')"
              convert test_004b.png -gravity SouthEast -pointsize 62 -fill white -annotate +30+30 "$d ($c)" test_004b_time.png
              convert test_005.png -gravity SouthEast -pointsize 62 -fill white -annotate +30+30 "$d ($c)" test_005_time.png
              convert test_007.png -gravity SouthEast -pointsize 62 -fill white -annotate +30+30 "$d ($c)" test_007_time.png
              convert test_099.png -gravity SouthEast -pointsize 62 -fill white -annotate +30+30 "$d ($c)" test_099_time.png
              mv test_004b_time.png test_004b.png
              mv test_005_time.png test_005.png
              mv test_007_time.png test_007.png
              mv test_099_time.png test_099.png
      - name: upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: linuxscreen_${{ matrix.api-level }}
          path: |
            /home/runner/screen*.png
            /home/runner/work/ToFShare/ToFShare/test_outputfiles/*.png
      - name: upload logcat output
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: logcat_${{ matrix.api-level }}
          path: |
            /home/runner/work/ToFShare/ToFShare/android-refimpl-app/logcat.txt
      - name: Rename artifact for nightly upload
        if: github.event_name == 'push' && github.ref == 'refs/heads/zoff99/dev003'
        run: |
          pwd
          cp -av /home/runner/work/ToFShare/ToFShare/test_outputfiles/test_004b.png screen_shot_android_${{ matrix.api-level }}_02.png
          cp -av /home/runner/work/ToFShare/ToFShare/test_outputfiles/test_005.png screen_shot_android_${{ matrix.api-level }}_03.png
          cp -av /home/runner/work/ToFShare/ToFShare/test_outputfiles/test_099.png screen_shot_android_${{ matrix.api-level }}_11.png
      - name: Upload to nightly release
        uses: ncipollo/release-action@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/zoff99/dev003'
        with:
          allowUpdates: true
          tag: nightly
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "screen_shot_android_${{ matrix.api-level }}_02.png,screen_shot_android_${{ matrix.api-level }}_03.png,screen_shot_android_${{ matrix.api-level }}_11.png"

